{"version":3,"sources":["ng://npm-aio-auth/lib/auth-config.ts","ng://npm-aio-auth/lib/_services/authentication.service.ts","ng://npm-aio-auth/lib/aio-auth-v01.service.ts","ng://npm-aio-auth/lib/aio-auth-v01.component.ts","ng://npm-aio-auth/lib/_helpers/jwt.interceptor.ts","ng://npm-aio-auth/lib/_helpers/error.interceptor.ts","ng://npm-aio-auth/lib/login/login.component.ts","node_modules/tslib/tslib.es6.js","ng://npm-aio-auth/lib/register/register.component.ts","ng://npm-aio-auth/lib/_helpers/must-match.validator.ts","ng://npm-aio-auth/lib/_services/user.ts","ng://npm-aio-auth/lib/fblogin/fblogin.component.ts","ng://npm-aio-auth/lib/gmaillogin/gmaillogin.component.ts","ng://npm-aio-auth/lib/log-out/log-out.component.ts","ng://npm-aio-auth/lib/insta-login/insta-login.component.ts","ng://npm-aio-auth/lib/ion-login/ion-login.component.ts","ng://npm-aio-auth/lib/ion-reg/ion-reg.component.ts","ng://npm-aio-auth/lib/reset-password/reset-password.component.ts","ng://npm-aio-auth/lib/ion-reset-password/ion-reset-password.component.ts","ng://npm-aio-auth/lib/aio-auth-v01.module.ts","ng://npm-aio-auth/lib/_guards/auth.guard.ts"],"names":["AuthConfigService","InjectionToken","AuthenticationService","Object","defineProperty","prototype","this","currentUserSubject","value","login","dataObj","_this","http","post","authconfig","ApiURL","pipe","tap","user","localStorage","setItem","JSON","stringify","next","error","throwError","FBlogin","data","username","email","password","id","logout","removeItem","register","checkEmailExis","resp","fbRegister","firstName","lastName","provider","img_url","photoURL","getInstaUserData","AccessToken","get","resetPassword","emailAdd","Injectable","args","providedIn","HttpClient","Inject","BehaviorSubject","parse","getItem","currentUser","asObservable","AioAuthV01Service","authSer","currentUserValue","getLoginRedirect","authConfig","AfterLoginURL","fbProvider","GmProvider","AioAuthV01Component","ngOnInit","Component","selector","template","JwtInterceptor","intercept","request","authenticationService","token","clone","setHeaders","Authorization","handle","ErrorInterceptor","catchError","err","console","log","status","router","navigate","message","statusText","Router","LoginComponent","showLogin","registerLink","loginForm","formBuilder","group","Validators","required","minLength","maxLength","passwordHints","returnUrl","route","snapshot","queryParams","controls","onSubmit","submitted","invalid","loading","f","first","subscribe","FormBuilder","ActivatedRoute","Input","regURL","registerURL","resetPwdURL","loginBtnText","RegBtnText","heading","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__generator","thisArg","body","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","step","op","TypeError","call","done","pop","length","push","e","RegisterComponent","registerForm","userExist","errorCode","custClass","frmShow","fb","confirmPassword","validator","MustMatch","controlName","matchingControlName","formGroup","control","matchingControl","errors","mustMatch","setErrors","isEmailUnique","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","rejected","result","then","apply","curEmail","debounceTime","distinctUntilChanged","_a","loginURL","regSuccessMsg","SocialUser","FbloginComponent","ngAfterViewInit","$fbProvider","FBProvider","fbAsyncInit","FB","init","appId","autoLogAppEvents","cookie","xfbml","version","js","fjs","document","getElementsByTagName","getElementById","createElement","async","src","parentNode","insertBefore","fbLogin","getFbUserData","catch","response","authResponse","authResponse_2","api","locale","fields","fbUser","first_name","last_name","authToken","accessToken","facebook","scope","btnText","GmailloginComponent","initialize","loadScript","onload","inner_text_content","signInJS","text","head","appendChild","signInWithGoogle","_this_1","gapi","auth2","getAuthInstance","isSignedIn","signIn","users","profile","getGoogleProfile","getBasicProfile","getId","getEmail","getImageUrl","getGivenName","getFamilyName","idToken","clientSecretId","gmailProvider","G_ApiKey","gmailAPIKey","load","apiKey","clientId","LogOutComponent","signOut","InstaLoginComponent","IGClientid","IGRedirectURL","instaSignIn","authenticateInstagram","instagramClientId","instagramRedirectUri","that","popupLeft","window","screen","width","popupTop","height","popup","open","location","hash","interval","setInterval","clearInterval","slice","close","login_callback","evt","profile_1","full_name","split","tslib_1.__extends","IonLoginComponent","_super","IonRegComponent","ResetPasswordComponent","resetPwdForm","res","successMsg","IonResetPasswordComponent","routes","path","component","AioAuthV01Module","forRoot","config","ngModule","providers","provide","useValue","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","HttpClientModule","IonicModule","RouterModule","forChild","HTTP_INTERCEPTORS","useClass","multi","exports","AuthGuard","canActivate","state","url"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\n// first define an interface for our configuration\nexport interface AuthConfig {\n  gmailProvider: string; \n  gmailAPIKey: string;\n  FBProvider: string;\n  AfterLoginURL: string;\n  loginURL: string;\n  registerURL: string;\n  forgetPwdURL: string;\n  ApiURL: string;\n  IGClientid: string;\n  IGRedirectURL: string;\n  regSuccessMsg :string;\n  resetPwdURL:string;  \n}\n\n// then define injectionToken\nexport const AuthConfigService = new InjectionToken<AuthConfig>(\n  'AuthConfig'\n);\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError, Subscriber } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AuthConfig, AuthConfigService } from '../auth-config';\n//import { AioAuthV01Service } from '../aio-auth-v01.service';\n \n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient,  @Inject(AuthConfigService) private authconfig: AuthConfig) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n        \n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n \n    /**\n     * validate username and password \n     * @method: login\n     * @input: username & password\n     * @output: Users data object      * \n     */\n\n    login(dataObj) {\n       \n       return this.http.post<any>(this.authconfig.ApiURL+'/login', dataObj)\n            .pipe( tap( // Log the result or error\n                user => {\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n                    return user; \n                },\n                error => {\n                    throwError(error);\n                }\n              ));\n\n    }\n\n    /**\n     * Facebook Login\n     */\n    FBlogin( data : any ){\n        var username = data.email;\n        var password = data.id;\n        return this.http.post<any>(this.authconfig.ApiURL+'/login', { username, password })\n            .pipe( tap( // Log the result or error\n                user => {\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n                    return user; \n                },\n                error => {\n                    throwError(error);\n                }\n              ));\n    }\n\n    logout() {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n    \n    /**\n     * @method: register()\n     * @input: user data in Object\n     * @output: boolean  \n     */\n    register(dataObj){\n       // console.log(displayName, full_name, email, password, provider, photoURL, access_token)\n        return this.http.post<any>(this.authconfig.ApiURL+'/create_user', dataObj)\n        .pipe( tap(\n            user => {               \n                return user; \n            },\n            error => {                \n                throwError(error);\n            }\n          ));\n\n    }\n\n    /**\n     * check email existance\n     * @input: email\n     * @output: object\n     */\n    checkEmailExis(email){  \n        return this.http.post<any>(this.authconfig.ApiURL+'/users/auth', { email: email })\n        .pipe( tap(\n            resp => {             \n                return resp; \n            },\n            error => { \n                throwError(error);\n            }\n          ));\n    }\n\n    /**\n     * Facebook Registration/login\n     */\n    fbRegister(data : any){\n         \n        return this.http.post<any>(this.authconfig.ApiURL+'/create_user', { username: data.email, password: data.id, firstName: data.firstName, lastName: data.lastName, provider: data.provider, img_url: data.photoURL })\n        .pipe( tap(\n            user => {               \n                return user; \n            },\n            error => {                \n                throwError(error);\n            }\n          ));\n    }\n\n    /**\n     * Get Instagram User Data\n     * @input: auth token id\n     * @output: object\n     */\n    getInstaUserData(AccessToken){ \n        return this.http.get<any>('https://api.instagram.com/v1/users/self/?access_token='+AccessToken) .pipe( tap(\n            user => {               \n                return user; \n            },\n            error => {                \n                throwError(error);\n            }\n          ));\n    }\n\n    /**\n     * Method to send the reset password link to user's email\n     * @input: email/user Id\n     * @ouput: boolean\n     */\n    resetPassword(emailAdd: string){\n        return this.http.post<any>(this.authconfig.ApiURL+'/reset_password', { email: emailAdd })\n        .pipe( tap(\n            resp => {             \n                return resp; \n            },\n            error => { \n                throwError(error);\n            }\n          ));\n\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { AuthConfig, AuthConfigService } from './auth-config';\nimport { AuthenticationService } from './_services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AioAuthV01Service {\n  \n  static fbProvider = '';\n  static GmProvider = 'default';\n  \n  constructor(@Inject(AuthConfigService) private authConfig: AuthConfig,  private authSer: AuthenticationService) {}\n   \n\n  /**\n   * Method to get the login status\n   * \n   */\n  public get isLogin(){\n    return this.authSer.currentUserValue;\n  }\n\n  // path to redirect after login\n  getLoginRedirect(){\n    return this.authConfig.AfterLoginURL;\n  } \n}\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'lib-aio-auth-v01',\n  template: `\n    <p>\n      aio-auth-v01 works!\n    </p>\n  `,\n  styles: []\n})\nexport class AioAuthV01Component implements OnInit {\n\n  constructor( ) { }\n\n  ngOnInit() {\n  } \n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n       \n        let currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n        //console.log('clone header'+JSON.stringify(request))\n        return next.handle(request);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService, private router: Router) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n       \n        return next.handle(request).pipe(catchError(err => {\n            console.log('Error Inceptor',err)\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();                \n                this.router.navigate(['/']);\n            }\n            const error = err.error.message || err.statusText;\n           \n            return throwError(error);\n        }))\n    }\n}","import { Component, OnInit, Inject, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { AuthConfig, AuthConfigService } from '../auth-config';\n\n@Component({\n  selector: 'td-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n    public loginForm: FormGroup;\n    public loading = false;\n    public submitted = false;\n    public returnUrl: string;\n    public error = '';\n    public showLogin: Boolean = true;\n    public currentUser: any;\n    \n    public regURL: string = (this.authconfig.registerURL) ? this.authconfig.registerURL :'register';\n    \n    public resetPwdURL: string = (this.authconfig.resetPwdURL) ? this.authconfig.resetPwdURL :'reset-password';\n    \n\n    @Input() loginBtnText: String = 'Login';\n    @Input() RegBtnText: String = 'Register';\n    @Input() heading: String = '';\n    @Input() registerLink: number = 1;\n    @Input() passwordHints: String = \"\";\n    \n\n\n    constructor(\n        public formBuilder: FormBuilder,\n        public route: ActivatedRoute,\n        public router: Router,\n        public authenticationService: AuthenticationService,\n        @Inject(AuthConfigService) public authconfig: AuthConfig\n    ) { }\n\n    ngOnInit() {\n\n        if(this.authenticationService.currentUserValue){\n            this.showLogin = false;\n            this.currentUser = this.authenticationService.currentUserValue;            \n        }\n        this.registerLink = (this.registerLink == 1 ) ? 0 : 1 ;\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30)]]\n        });\n        console.log(this.passwordHints);\n        // reset login status\n       // this.authenticationService.logout();\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || this.authconfig.AfterLoginURL;\n        \n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    console.log(error)\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { FormBuilder,Validators, FormGroup} from '@angular/forms';\nimport { MustMatch } from '../_helpers/must-match.validator';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { first, debounceTime, distinctUntilChanged, mergeMap, delay } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { AuthConfig, AuthConfigService } from '../auth-config';\n \n\n@Component({\n  selector: 'td-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = ''; \n  registerForm: FormGroup;\n \n  custClass = '';\n  frmShow  = true;\n  public loginURL: string = (this.authconfig.loginURL) ? this.authconfig.loginURL :'login';\n  public regSuccessMsg: string = (this.authconfig.regSuccessMsg) ? this.authconfig.regSuccessMsg :'Successfully Submitted';\n  @Input() loginBtnText: String = 'Login';\n  @Input() RegBtnText: String = 'Register';\n  @Input() heading: String = 'User Register';\n\n\n\n\n  constructor(\n    public fb: FormBuilder, \n    public route: ActivatedRoute,\n    public router: Router,\n    public authenticationService: AuthenticationService,\n    @Inject(AuthConfigService) public authconfig: AuthConfig\n  ) { }\n\n  \n  // get controll value for form validatation \n  get f() { return this.registerForm.controls; } \n\n/**\n * @ Method to do register\n * @ input: the required fields like username, email, password etc\n * @ output: objservable\n */\n  onSubmit(){\n    this.submitted = true;\n\n\n    if(this.registerForm.invalid && this.userExist == false){\n      console.log('Reg Form Error');\n      return ;\n    }   \n   \n    this.loading = true;\n    this.authenticationService.register(this.f)\n      .pipe(first())\n      .subscribe(\n          resp => { \n            if(resp.errorCode ==null){\n              this.custClass = 'success'; \n              this.frmShow = false;              \n            }else if(resp.errorCode == 'user_exist'){\n              this.userExist = true;  \n            }else{\n              this.error = 'Something wrong';              \n            }            \n          },\n          error => {\n              this.error = error;\n              this.loading = false;\n          });\n      //this.registerForm.reset(); \n}\n\n  ngOnInit() {\n    this.registerForm = this.fb.group(\n        {\n          email: ['', [Validators.required, Validators.email]],\n          firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n          lastName: ['', [Validators.required , Validators.minLength(2), Validators.maxLength(30)]],\n          password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30)]],\n          confirmPassword: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30)]]\n        },\n        {\n          validator: [MustMatch('password', 'confirmPassword')]\n        }\n    )\n  };\n  userExist: boolean = false;\n  curEmail: string = '';\n  \n  async isEmailUnique(email: string) { \n    \n    if(this.f.firstName.value ==\"\" && this.f.lastName.value==\"\"){\n      return false;\n    }  \n\n    if(email == this.curEmail){\n      return false;\n    }else{\n      this.curEmail = email;\n    } \n\n    await this.authenticationService.checkEmailExis(email)\n    .pipe(\n      first(), \n      debounceTime(200),\n      distinctUntilChanged()\n    )\n    .subscribe(\n      resp => {  \n        if(resp.message !='ok'){ \n          this.userExist = true; \n        }else{\n          this.userExist = false; \n        }\n      },\n      error => {\n          this.error = error;\n          this.loading = false;\n      }\n    ); \n  }\n}\n","import { FormGroup } from '@angular/forms';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { first } from 'rxjs/operators';\nimport { debounceTime } from 'rxjs/operators';\n\n\n// custom validator to check that two fields match\n\n\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}\n/*\nexport function userExist(controlName: string) {\n    return (formGroup: FormGroup, authServ : AuthenticationService) => {\n        const userControl = formGroup.controls[controlName]; \n\n        if (userControl.errors && !userControl.errors.userExist) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n         \n        authServ.checkEmailExis(userControl)\n        .pipe(first(), debounceTime(200))\n        .subscribe(\n            resp => {\n               return resp; \n            },\n            error => { \n                this.error = error;\n                this.loading = false;\n            });\n\n        // set error on matchingControl if validation fails\n        if (userControl.value !== 'amarjeet') {\n            userControl.setErrors({ userExist: true });\n        } else {\n            userControl.setErrors(null);\n        }\n    }\n}*/","export class SocialUser {\n    provider: string;\n    id: string;\n    email: string;\n    name: string;\n    photoUrl: string;\n    firstName: string;\n    lastName: string;\n    authToken: string;\n    idToken: string;\n    photoURL: string;\n    authorizationCode: string;\n    /**\n     * Contains the entire object returned from the Facebook API based on the fields you requested.\n     * Only available for the Facebook provider.\n     * Refer to the Graph API for details: https://developers.facebook.com/docs/graph-api\n     */\n    facebook?: any;\n    /**\n     * Contains the entire object returned from the Linked In API based on the fields you requested.\n     * Only available for the Linked In provider.\n     * Refer to the Linked In docs: https://developer.linkedin.com/docs/fields\n     */\n    linkedIn?: any;\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { AuthConfig, AuthConfigService } from '../auth-config';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { throwError, Observable } from 'rxjs';\nimport { SocialUser } from '../_services/user';\ndeclare var FB: any;\n\n@Component({\n  selector: 'lib-fblogin',\n  templateUrl: './fblogin.component.html',\n  styleUrls: ['./fblogin.component.css']\n})\nexport class FbloginComponent implements OnInit {\n\n  public currentUser: Observable<SocialUser>;\n\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n\n  @Input() btnText: String = 'SignIn/SignUp with ';\n  constructor(@Inject(AuthConfigService) private authconfig: AuthConfig, private router: Router, private route: ActivatedRoute, private authenticationService: AuthenticationService) {\n\n  }\n\n  ngAfterViewInit() {\n    let $fbProvider = this.authconfig.FBProvider;\n    (window as any).fbAsyncInit = function () {\n      FB.init({\n        appId: $fbProvider,\n        autoLogAppEvents: true,\n        cookie: true,\n        xfbml: true,\n        version: 'v3.3'\n      });\n    };\n  }\n  ngOnInit() {\n\n    (function (d, s, id) {\n      var js, fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) { return; }\n      js = d.createElement(s); js.id = id;\n      js.async = false;\n      js.src = \"//connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    }(document, 'script', 'facebook-jssdk'));\n  }\n\n  /**\n   * fbLogin method to check or do  facebook login\n   * @input: none\n   * @ouput: object\n   * \n   */\n\n  fbLogin() {\n    this.getFbUserData().then(data => {\n      this.loading = true;\n      this.authenticationService.fbRegister(data)\n        .pipe(first())\n        .subscribe(\n          resp => {\n\n            this.authenticationService.FBlogin(data).subscribe(result => {\n              this.router.navigate([this.authconfig.AfterLoginURL]);\n            });\n          },\n          error => {\n            this.error = error;\n            this.loading = false;\n          });\n\n    }).catch(error => {\n      console.log(error)\n    })\n  }\n\n  /**\n   * @method: Facebook Login\n   * @input: Facebook App Id\n   * @outpt: Object User data \n   */\n  getFbUserData() {\n    return new Promise((\n      function (resolve, reject) {\n        FB.login((function (response) {\n\n          if (response.authResponse) {\n            var authResponse_2 = response.authResponse;\n            FB.api(\"/me\", { locale: 'en_US', fields: 'id,first_name,last_name,email,link,gender,locale,picture' }, (\n              function (fbUser) {\n\n                var user = new SocialUser();\n                user.id = fbUser.id;\n                user.email = fbUser.email;\n                user.photoURL = 'https://graph.facebook.com/' + fbUser.id + '/picture?type=normal';\n                user.firstName = fbUser.first_name;\n                user.lastName = fbUser.last_name;\n                user.authToken = authResponse_2.accessToken;\n                user.facebook = fbUser;\n                user.provider = \"FACEBOOK\";\n                resolve(user);\n              }));\n          }\n          else {\n            reject('User cancelled login or did not fully authorize.');\n          }\n        }), { scope: 'email' });\n      }\n    ));\n  }\n}","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { AuthConfig, AuthConfigService } from '../auth-config';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SocialUser } from '../_services/user';\ndeclare var gapi : any;\n@Component({\n  selector: 'lib-gmaillogin',\n  templateUrl: './gmaillogin.component.html',\n  styleUrls: ['./gmaillogin.component.css']\n})\nexport class GmailloginComponent implements OnInit {\n\n  @Input() btnText: String = 'SignIn/SignUp with ';\n  constructor(private authenticationService: AuthenticationService,\n    @Inject(AuthConfigService) private authconfig: AuthConfig,private router: Router,  private route: ActivatedRoute) { }\n\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n\n    ngOnInit() {\n\n      // get return url from route parameters or default to '/'\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || this.authconfig.AfterLoginURL;\n      this.initialize().then(response => {\n          \n      }).catch(error => {\n          console.log(error,'error')\n      });\n      \n   }\n\n initialize = function () {\n   let clientSecretId = this.authconfig.gmailProvider;\n   let G_ApiKey = this.authconfig.gmailAPIKey;\n     var _this = this;\n     return new Promise((\n       function (resolve, reject) {\n         _this.loadScript(clientSecretId, 'https://apis.google.com/js/platform.js', (\n           function () {\n             gapi.load('auth2', (\n               \n             function () {\n                 _this.auth2 = gapi.auth2.init({\n                  apiKey: G_ApiKey,\n                  clientId: clientSecretId,\n                  scope: 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/plus.me'\n                 });\n                 _this.auth2.then((\n                   function () {\n                     //_this._readyState.next(true);\n                     resolve();\n                 })).catch((\n                 function (err) {\n                     reject(err);\n                 }));\n             }));\n         }));\n     }));\n };\n \n  \n  loadScript(id, src, onload, async, inner_text_content) {\n      if (async === void 0) { async = true; }\n      if (inner_text_content === void 0) { inner_text_content = ''; }\n      if (document.getElementById(id)) {\n          return;\n      }\n      src= 'https://apis.google.com/js/platform.js';\n      \n      var signInJS = document.createElement('script');\n      signInJS.async = true;\n      signInJS.src = src;\n      signInJS.onload = onload;\n      signInJS.text = 'Gmail Login'; // LinkedIn\n      document.head.appendChild(signInJS);\n  };\n\n  signInWithGoogle () { \n      const isSignedIn = gapi.auth2.getAuthInstance().isSignedIn.get();\n     /*  if(isSignedIn) {\n        let profile = this.getGoogleProfile();\n        this.authenticationService.register(profile.firstName, profile.lastName, profile.email, profile.id, profile.provider, profile.photoURL)\n        .pipe(first())\n        .subscribe(\n            resp => {\n              this.authenticationService.login(profile.email,profile.id).subscribe(result =>{\n                this.router.navigate([this.authconfig.AfterLoginURL]);\n              });\n            },\n            error => {\n                console.log(error)\n                this.error = error;\n                this.loading = false;\n            });\n      }else{ */\n        gapi.auth2.getAuthInstance().signIn().then(users =>{\n          let profile = this.getGoogleProfile();\n\n          this.authenticationService.register(profile)\n          .pipe(first())\n          .subscribe(\n              resp => {\n                this.authenticationService.login(profile).subscribe(result =>{\n                  this.router.navigate([this.authconfig.AfterLoginURL]);\n                });\n              },\n              error => {\n                  console.log(error)\n                  this.error = error;\n                  this.loading = false;\n              });\n\n        }).catch( error => {\n            console.log('Cancelled');\n        })\n      //}\n  }\n\n  /**\n   * get Google user profile\n   * @input: token\n   * @output: object\n   */\n  getGoogleProfile(){\n      var profile = gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\n      \n      var token = '';//gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse(true).access_token;\n      var backendToken = '';//gapi.auth2.currentUser.getAuthInstance().get().getAuthResponse(true).id_token;    \n      var user = new SocialUser();\n      user.id = profile.getId();\n      user.email = profile.getEmail();\n      user.photoURL = profile.getImageUrl();\n      user.firstName = profile.getGivenName();\n      user.lastName = profile.getFamilyName();;\n      user.authToken = token;\n      user.idToken = backendToken;\n      user.provider = \"GOOGLE\";\n      return user;\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { AuthenticationService } from './../_services/authentication.service';\nimport { Router } from '@angular/router';\nimport { AuthConfig, AuthConfigService } from '../auth-config';\n \n@Component({\n  selector: 'td-log-out',\n  templateUrl: './log-out.component.html',\n  styleUrls: ['./log-out.component.css']\n})\nexport class LogOutComponent implements OnInit {\n\n  constructor( private authenticationService: AuthenticationService, private router: Router,  @Inject(AuthConfigService) private authconfig: AuthConfig) { }\n\n\n  ngOnInit() {\n  }\n  /**\n   * @method: SignOut\n   * @input: none\n   * @output: boolean\n   */\n\n  signOut(){\n    this.authenticationService.logout();                \n    this.router.navigate(['/']);\n  }\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { AuthConfig, AuthConfigService } from '../auth-config';\nimport { first } from 'rxjs/operators';\nimport { SocialUser } from '../_services/user';\n\n@Component({\n  selector: 'td-insta-login',\n  templateUrl: './insta-login.component.html',\n  styleUrls: ['./insta-login.component.css']\n})\nexport class InstaLoginComponent implements OnInit {\n  public accessToken = null;\n  private IGClientid = '';\n  private IGRedirectURL = '';\n  @Input() btnText: String = 'Instagram Login';\n\n\n  // constructor start here \n  constructor( private router: Router,\n    private authenticationService: AuthenticationService,    \n    @Inject(AuthConfigService) private authconfig: AuthConfig ) {}\n\n  //ngOnInit called at page load// \n  \n  ngOnInit() {\n    this.IGClientid = this.authconfig.IGClientid;\n    this.IGRedirectURL = (this.authconfig.IGRedirectURL !='') ? this.authconfig.IGRedirectURL : this.authconfig.loginURL ;\n  }\n \n\n  /**\n   * @Method: open the pop up to authorized the user\n   * @input: client Id\n   * @output: access token\n   * \n   */\n  instaSignIn(){    \n\n    this.authenticateInstagram(\n      this.IGClientid,\n      this.IGRedirectURL\n  );\n  return false;\n\n  }\n\n/**\n * @method to open the popup and authenticate the Instagram User\n * @param instagramClientId \n * @param instagramRedirectUri\n * @output user data in object\n */\n\nauthenticateInstagram (instagramClientId, instagramRedirectUri) {\n  let that = this;\n    // Pop-up window size, change if you want\n    let popupWidth = 700,\n        popupHeight = 500,\n        popupLeft = (window.screen.width - popupWidth) / 2,\n        popupTop = (window.screen.height - popupHeight) / 2;\n    // Url needs to point to instagram_auth.php\n    let popup = window.open('instagram_auth.php', '', 'width='+popupWidth+',height='+popupHeight+',left='+popupLeft+',top='+popupTop+'');\n    popup.onload = () =>{\n        // Open authorize url in pop-up\n        if(window.location.hash.length == 0) {\n            popup.open('https://instagram.com/oauth/authorize/?client_id='+instagramClientId+'&redirect_uri='+instagramRedirectUri+'&response_type=token', '_self');\n        }\n        // An interval runs to get the access token from the pop-up\n        let interval = setInterval(() => {\n            try {\n                // Check if hash exists                \n               if(popup.location.hash.length) {\n                    // Hash found, that includes the access token\n                   clearInterval(interval);                  \n                   that.accessToken = popup.location.hash.slice(14); //slice #access_token= from string                                   \n                    popup.close()\n                    that.login_callback();                   \n                   \n                }\n            }\n            catch(evt) {\n              console.log('in err');\n                // Permission denied\n            }\n        }, 100);\n    };\n};\n\n/**\n * @method Instagram Auth call back \n * @param none\n * @output json object\n */\n  login_callback(){     \n    if(this.accessToken){   \n      this.authenticationService.getInstaUserData(this.accessToken).subscribe( result => {\n        if(result){\n          let profile = result.data;\n          let fullName = profile.full_name.split(\" \");\n          \n          // calling the user registration method \n          this.authenticationService.register(profile)\n          .pipe(first())\n          .subscribe(\n              resp => {\n\n                // after successs full registration, just called the login method.\n                this.authenticationService.login(profile).subscribe(result =>{\n                  this.router.navigate([this.authconfig.AfterLoginURL]);\n                });\n              },\n              error => {\n                  console.log(error);\n              });\n        }\n        \n         \n      });       \n\n    }\n    \n  }\n \n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { AuthConfigService, AuthConfig } from '../auth-config';\n\n@Component({\n  selector: 'ion-login',\n  templateUrl: './ion-login.component.html',\n  styleUrls: ['./ion-login.component.css']\n})\nexport class IonLoginComponent extends LoginComponent implements OnInit {\n\n  constructor(public formBuilder: FormBuilder,\n    public route: ActivatedRoute,\n    public router: Router,\n    public authenticationService: AuthenticationService,\n    @Inject(AuthConfigService) public authconfig: AuthConfig) { \n    super(\n      formBuilder,\n      route,\n      router,\n      authenticationService,\n      authconfig\n    );\n  }\n\n  ngOnInit() {\n   super.ngOnInit();\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthConfig, AuthConfigService } from '../auth-config';\nimport { FormBuilder } from '@angular/forms';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { RegisterComponent } from '../register/register.component';\n\n@Component({\n  selector: 'ion-reg',\n  templateUrl: './ion-reg.component.html',\n  styleUrls: ['./ion-reg.component.css']\n})\nexport class IonRegComponent extends RegisterComponent{\n\n  \n  constructor(\n   \n    public fb: FormBuilder, \n    public route: ActivatedRoute,\n    public router: Router,\n    public authenticationService: AuthenticationService,\n    @Inject(AuthConfigService) public authconfig: AuthConfig\n    ) { \n      super(\n        fb,\n        route,\n        router,\n        authenticationService,\n        authconfig\n      )\n    }\n\n  ngOnInit() {\n    super.ngOnInit(); \n  }\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { AuthConfig, AuthConfigService } from '../auth-config';\n\n@Component({\n  selector: 'reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  public resetPwdForm: FormGroup;\n  public loading = false;\n  public submitted = false;\n  public returnUrl: string;\n  public error = '';\n  public showLogin: Boolean = true;\n  public currentUser: any;\n  \n  public loginURL: string = (this.authconfig.loginURL) ? this.authconfig.loginURL :'login';\n  \n  public resetPwdURL: string = (this.authconfig.resetPwdURL) ? this.authconfig.resetPwdURL :'reset-password';\n  public successMsg: string ='';\n\n  @Input() loginBtnText: String = 'Login';\n\n  @Input() heading: String = 'Reset Password';\n\n\n  constructor(\n      public formBuilder: FormBuilder,\n      public route: ActivatedRoute,\n      public router: Router,\n      public authenticationService: AuthenticationService,\n      @Inject(AuthConfigService) public authconfig: AuthConfig\n  ) { }\n\n  ngOnInit() {\n\n      \n\n      this.resetPwdForm = this.formBuilder.group({\n          username: ['', [Validators.required, Validators.email]]\n      });\n\n      // reset login status\n     // this.authenticationService.logout();\n\n      // get return url from route parameters or default to '/'\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || this.authconfig.AfterLoginURL;\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetPwdForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.resetPwdForm.invalid) {\n          return;\n      }\n      \n      this.loading = true;\n      this.authenticationService.resetPassword(this.f.username.value).subscribe(res =>{\n        if(res.message  ==\"ok\"){\n          this.successMsg =  \"Password reset link has been sent to your registered email. To reset password check email.\";\n        }else{\n          this.error =  \"Something wrong with server. Please try again\";\n        }  \n      });\n      \n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { AuthConfig, AuthConfigService } from '../auth-config';\n\n\n@Component({\n  selector: 'ion-reset-password',\n  templateUrl: './ion-reset-password.component.html',\n  styleUrls: ['./ion-reset-password.component.css']\n})\nexport class IonResetPasswordComponent extends ResetPasswordComponent implements OnInit {\n\n  constructor( public formBuilder: FormBuilder,\n    public route: ActivatedRoute,\n    public router: Router,\n    public authenticationService: AuthenticationService,\n    @Inject(AuthConfigService) public authconfig: AuthConfig) { \n    super(\n      formBuilder,\n      route,\n      router,\n      authenticationService,\n      authconfig\n    )\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n}\n","import { NgModule, InjectionToken, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';  \nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { JwtInterceptor } from '../lib/_helpers/jwt.interceptor';\nimport { ErrorInterceptor } from '../lib/_helpers/error.interceptor';\nimport { AioAuthV01Component } from './aio-auth-v01.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FbloginComponent } from './fblogin/fblogin.component';\nimport { GmailloginComponent } from './gmaillogin/gmaillogin.component';\nimport { AioAuthV01Service } from './aio-auth-v01.service'; \nimport { AuthConfig, AuthConfigService } from './auth-config';\nimport { LogOutComponent } from './log-out/log-out.component';\nimport { InstaLoginComponent } from './insta-login/insta-login.component';\nimport { IonLoginComponent } from './ion-login/ion-login.component';\nimport { IonicModule } from '@ionic/angular';\nimport { IonRegComponent } from './ion-reg/ion-reg.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { IonResetPasswordComponent } from './ion-reset-password/ion-reset-password.component';\n \n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  }\n];\n@NgModule({\n  declarations: [AioAuthV01Component, LoginComponent, RegisterComponent, FbloginComponent, GmailloginComponent, LogOutComponent, InstaLoginComponent, IonLoginComponent, IonRegComponent, ResetPasswordComponent, IonResetPasswordComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    IonicModule,\n    RouterModule.forChild(routes)    \n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    \n  ],\n  exports: [AioAuthV01Component, LoginComponent, RegisterComponent, FbloginComponent, GmailloginComponent, LogOutComponent, InstaLoginComponent, IonLoginComponent, IonRegComponent, ResetPasswordComponent, IonResetPasswordComponent, RouterModule]\n})\n\n\nexport class AioAuthV01Module {\n  static forRoot(config: AuthConfig): ModuleWithProviders {\n   \n    return {\n      ngModule: AioAuthV01Module,\n      providers: [\n        AioAuthV01Service,\n        {\n          provide: AuthConfigService,\n          useValue: config\n        }\n      ]\n    };\n  }\n  \n }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (localStorage.getItem('currentUser')) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}"]}