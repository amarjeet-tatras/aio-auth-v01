!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/common/http"),require("rxjs"),require("rxjs/operators"),require("@ionic/angular"),require("@angular/forms"),require("@angular/core"),require("@angular/router")):"function"==typeof define&&define.amd?define("aio-auth-v01",["exports","@angular/common","@angular/common/http","rxjs","rxjs/operators","@ionic/angular","@angular/forms","@angular/core","@angular/router"],e):e(t["aio-auth-v01"]={},t.ng.common,t.ng.common.http,t.rxjs,t.rxjs.operators,t.angular,t.ng.forms,t.ng.core,t.ng.router)}(this,function(t,e,n,s,a,r,i,o,u){"use strict";var c=new o.InjectionToken("AuthConfig"),l=(Object.defineProperty(d.prototype,"currentUserValue",{get:function(){return this.currentUserSubject.value},enumerable:!0,configurable:!0}),d.prototype.login=function(t,e){var n=this;return this.http.post(this.authconfig.ApiURL+"/users/authenticate",{username:t,password:e}).pipe(a.tap(function(t){return localStorage.setItem("currentUser",JSON.stringify(t)),n.currentUserSubject.next(t),t},function(t){s.throwError(t)}))},d.prototype.FBlogin=function(t){var e=this,n=t.email,r=t.id;return this.http.post(this.authconfig.ApiURL+"/users/authenticate",{username:n,password:r}).pipe(a.tap(function(t){return localStorage.setItem("currentUser",JSON.stringify(t)),e.currentUserSubject.next(t),t},function(t){s.throwError(t)}))},d.prototype.logout=function(){localStorage.removeItem("currentUser"),this.currentUserSubject.next(null)},d.prototype.register=function(t,e,n,r,i,o){return this.http.post(this.authconfig.ApiURL+"/users/register",{username:n,password:r,firstName:t,lastName:e,provider:i,photoURL:o}).pipe(a.tap(function(t){return t},function(t){s.throwError(t)}))},d.prototype.checkEmailExis=function(t){return this.http.post(this.authconfig.ApiURL+"/users/auth",{email:t}).pipe(a.tap(function(t){return t},function(t){s.throwError(t)}))},d.prototype.fbRegister=function(t){return this.http.post(this.authconfig.ApiURL+"/users/register",{username:t.email,password:t.id,firstName:t.firstName,lastName:t.lastName,provider:t.provider,photoURL:t.photoURL}).pipe(a.tap(function(t){return t},function(t){s.throwError(t)}))},d.prototype.getInstaUserData=function(t){return this.http.get("https://api.instagram.com/v1/users/self/?access_token="+t).pipe(a.tap(function(t){return t},function(t){s.throwError(t)}))},d.decorators=[{type:o.Injectable,args:[{providedIn:"root"}]}],d.ctorParameters=function(){return[{type:n.HttpClient},{type:undefined,decorators:[{type:o.Inject,args:[c]}]}]},d.ngInjectableDef=o.defineInjectable({factory:function(){return new d(o.inject(n.HttpClient),o.inject(c))},token:d,providedIn:"root"}),d);function d(t,e){this.http=t,this.authconfig=e,this.currentUserSubject=new s.BehaviorSubject(JSON.parse(localStorage.getItem("currentUser"))),this.currentUser=this.currentUserSubject.asObservable()}var f=(Object.defineProperty(p.prototype,"isLogin",{get:function(){return this.authSer.currentUserValue},enumerable:!0,configurable:!0}),p.prototype.getLoginRedirect=function(){return this.authConfig.AfterLoginURL},p.fbProvider="",p.GmProvider="default",p.decorators=[{type:o.Injectable,args:[{providedIn:"root"}]}],p.ctorParameters=function(){return[{type:undefined,decorators:[{type:o.Inject,args:[c]}]},{type:l}]},p.ngInjectableDef=o.defineInjectable({factory:function(){return new p(o.inject(c),o.inject(l))},token:p,providedIn:"root"}),p);function p(t,e){this.authConfig=t,this.authSer=e}var g=(m.prototype.ngOnInit=function(){},m.decorators=[{type:o.Component,args:[{selector:"lib-aio-auth-v01",template:"\n    <p>\n      aio-auth-v01 works!\n    </p>\n  "}]}],m.ctorParameters=function(){return[]},m);function m(){}var h=(v.prototype.intercept=function(t,e){var n=this.authenticationService.currentUserValue;return n&&n.token&&(t=t.clone({setHeaders:{Authorization:"Bearer "+n.token}})),e.handle(t)},v.decorators=[{type:o.Injectable}],v.ctorParameters=function(){return[{type:l}]},v);function v(t){this.authenticationService=t}var b=(y.prototype.intercept=function(t,e){var n=this;return e.handle(t).pipe(a.catchError(function(t){console.log(t),401===t.status&&(n.authenticationService.logout(),n.router.navigate(["/"]));var e=t.error.message||t.statusText;return s.throwError(e)}))},y.decorators=[{type:o.Injectable}],y.ctorParameters=function(){return[{type:l},{type:u.Router}]},y);function y(t,e){this.authenticationService=t,this.router=e}var I=(w.prototype.ngOnInit=function(){this.authenticationService.currentUserValue&&(this.showLogin=!1,this.currentUser=this.authenticationService.currentUserValue),this.loginForm=this.formBuilder.group({username:["",i.Validators.required],password:["",i.Validators.required]}),this.returnUrl=this.route.snapshot.queryParams.returnUrl||this.authconfig.AfterLoginURL},Object.defineProperty(w.prototype,"f",{get:function(){return this.loginForm.controls},enumerable:!0,configurable:!0}),w.prototype.onSubmit=function(){var e=this;this.submitted=!0,this.loginForm.invalid||(this.loading=!0,this.authenticationService.login(this.f.username.value,this.f.password.value).pipe(a.first()).subscribe(function(t){e.router.navigate([e.returnUrl])},function(t){console.log(t),e.error=t,e.loading=!1}))},w.decorators=[{type:o.Component,args:[{selector:"td-login",template:'<div id="logreg-forms" *ngIf="showLogin">\n    <form class="form-signin" [formGroup]="loginForm" (ngSubmit)="onSubmit()">\n        <h1 class="h3 mb-3 font-weight-normal" style="text-align: center"> {{heading}}</h1>         \n\n        <div *ngIf="error" class="text-danger">{{error}}</div>\n        <div class="form-group">\n            <label for="username">Username</label>\n            <input type="text" formControlName="username" class="form-control" [ngClass]="{ \'is-invalid\': submitted && f.username.errors }" />\n            <div *ngIf="submitted && f.username.errors" class="invalid-feedback">\n                <div *ngIf="f.username.errors.required">Username is required</div>\n            </div>\n        </div>\n        <div class="form-group">\n            <label for="password">Password</label>\n            <input type="password" formControlName="password" class="form-control" [ngClass]="{ \'is-invalid\': submitted && f.password.errors }" />\n            <div *ngIf="submitted && f.password.errors" class="invalid-feedback">\n                <div *ngIf="f.password.errors.required">Password is required</div>\n            </div>\n        </div>\n        <div class="form-group">\n            <button [disabled]="loading" class="btn btn-success btn-block">{{loginBtnText}}</button>       \n        </div> \n        <div class="form-group">\n                <a routerLink="/{{regURL}}" id="newAccount">{{RegBtnText}}</a>\n        </div>\n        </form>\n \n        \n       \n</div>\n\n\n<div class="well"  *ngIf="!showLogin">\n        You are loggedIN with following details:<br/>\n\n        Username : {{currentUser.username}}\n        <p> First Name : {{currentUser.firstName}} </p>\n        <p> <td-log-out></td-log-out></p>\n    </div>',styles:[""]}]}],w.ctorParameters=function(){return[{type:i.FormBuilder},{type:u.ActivatedRoute},{type:u.Router},{type:l},{type:undefined,decorators:[{type:o.Inject,args:[c]}]}]},w.propDecorators={loginBtnText:[{type:o.Input}],RegBtnText:[{type:o.Input}],heading:[{type:o.Input}]},w);function w(t,e,n,r,i){this.formBuilder=t,this.route=e,this.router=n,this.authenticationService=r,this.authconfig=i,this.loading=!1,this.submitted=!1,this.error="",this.showLogin=!0,this.regURL=this.authconfig.registerURL?this.authconfig.registerURL:"register",this.loginBtnText="Login",this.RegBtnText="Register",this.heading="Sign In"}var x=function(t,e){return(x=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function S(t,e){function n(){this.constructor=t}x(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}function U(r,i){var o,s,a,t,u={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return t={next:e(0),"throw":e(1),"return":e(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function e(e){return function(t){return function n(t){if(o)throw new TypeError("Generator is already executing.");for(;u;)try{if(o=1,s&&(a=2&t[0]?s["return"]:t[0]?s["throw"]||((a=s["return"])&&a.call(s),0):s.next)&&!(a=a.call(s,t[1])).done)return a;switch(s=0,a&&(t=[2&t[0],a.value]),t[0]){case 0:case 1:a=t;break;case 4:return u.label++,{value:t[1],done:!1};case 5:u.label++,s=t[1],t=[0];continue;case 7:t=u.ops.pop(),u.trys.pop();continue;default:if(!(a=0<(a=u.trys).length&&a[a.length-1])&&(6===t[0]||2===t[0])){u=0;continue}if(3===t[0]&&(!a||t[1]>a[0]&&t[1]<a[3])){u.label=t[1];break}if(6===t[0]&&u.label<a[1]){u.label=a[1],a=t;break}if(a&&u.label<a[2]){u.label=a[2],u.ops.push(t);break}a[2]&&u.ops.pop(),u.trys.pop();continue}t=i.call(r,u)}catch(e){t=[6,e],s=0}finally{o=a=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([e,t])}}}var R=(Object.defineProperty(L.prototype,"f",{get:function(){return this.registerForm.controls},enumerable:!0,configurable:!0}),L.prototype.onSubmit=function(){var e=this;this.submitted=!0,this.registerForm.invalid&&0==this.userExist?console.log("Reg Form Error"):(this.loading=!0,this.authenticationService.register(this.f.firstName.value,this.f.lastName.value,this.f.email.value,this.f.password.value,"email","").pipe(a.first()).subscribe(function(t){null==t.errorCode?(e.custClass="success",e.frmShow=!1):"user_exist"==t.errorCode?e.userExist=!0:e.error="Something wrong"},function(t){e.error=t,e.loading=!1}))},L.prototype.ngOnInit=function(){this.registerForm=this.fb.group({email:["",[i.Validators.required,i.Validators.email]],firstName:["",[i.Validators.required,i.Validators.minLength(2),i.Validators.maxLength(30)]],lastName:["",[i.Validators.required,i.Validators.minLength(2),i.Validators.maxLength(30)]],password:["",[i.Validators.required,i.Validators.minLength(6),i.Validators.maxLength(30)]],confirmPassword:["",[i.Validators.required,i.Validators.minLength(6),i.Validators.maxLength(30)]]},{validator:[function t(r,i){return function(t){var e=t.controls[r],n=t.controls[i];n.errors&&!n.errors.mustMatch||(e.value!==n.value?n.setErrors({mustMatch:!0}):n.setErrors(null))}}("password","confirmPassword")]})},L.prototype.isEmailUnique=function(n){return function t(e,s,a,u){return new(a||(a=Promise))(function(t,n){function r(t){try{o(u.next(t))}catch(e){n(e)}}function i(t){try{o(u["throw"](t))}catch(e){n(e)}}function o(e){e.done?t(e.value):new a(function(t){t(e.value)}).then(r,i)}o((u=u.apply(e,s||[])).next())})}(this,void 0,void 0,function(){var e=this;return U(this,function(t){switch(t.label){case 0:return""==this.f.firstName.value&&""==this.f.lastName.value?[2,!1]:n==this.curEmail?[2,!1]:(this.curEmail=n,[4,this.authenticationService.checkEmailExis(n).pipe(a.first(),a.debounceTime(200),a.distinctUntilChanged()).subscribe(function(t){"ok"!=t.message?e.userExist=!0:e.userExist=!1},function(t){e.error=t,e.loading=!1})]);case 1:return t.sent(),[2]}})})},L.decorators=[{type:o.Component,args:[{selector:"td-register",template:'\x3c!-- main app container --\x3e\n\n              <h3 class="text-justify">{{ heading }}</h3>\n              <div *ngIf="error" class="alert alert-danger">{{error}}</div>\n              <div *ngIf="!frmShow && submitted && regSuccessMsg" class="alert alert-{{custClass}}">{{regSuccessMsg}}</div>\n\n              <form *ngIf="frmShow" [formGroup]="registerForm" (ngSubmit)="onSubmit()">                \n\n                  <div class="form-group">\n                      <label>First Name</label>\n                      <input type="text" tabindex="-1" formControlName="firstName" class="form-control" [ngClass]="{ \'is-invalid\': submitted && f.firstName.errors }" />\n                      <div *ngIf="submitted && f.firstName.errors" class="invalid-feedback">\n                          <div *ngIf="f.firstName.errors.required">First Name is required</div>\n                      </div>\n                  </div>\n                  <div class="form-group">\n                      <label>Last Name</label>\n                      <input type="text" formControlName="lastName" class="form-control" [ngClass]="{ \'is-invalid\': submitted && f.lastName.errors }" />\n                      <div *ngIf="submitted && f.lastName.errors" class="invalid-feedback">\n                          <div *ngIf="f.lastName.errors.required">Last Name is required</div>\n                      </div>\n                  </div>\n                  <div class="form-group">\n                      <label>Email</label>\n                      <input type="text" (blur)="isEmailUnique(emailAdd.value)"  id="email" formControlName="email" #emailAdd  class="form-control" [ngClass]="{ \'is-invalid\': submitted && f.email.errors }" />\n                    \n                      <div *ngIf="submitted && f.email.errors" class="invalid-feedback">\n                          <div *ngIf="f.email.errors.required">Email is required</div>\n                          <div *ngIf="f.email.errors.email">Email must be a valid email address</div>\n                      </div>\n                        <div *ngIf="userExist" class="invalid-feedback">This Email is already exists.</div>\n                  </div>\n                  <div class="form-group">\n                      <label>Password</label>\n                      <input type="password" formControlName="password" class="form-control" [ngClass]="{ \'is-invalid\': submitted && f.password.errors }" />\n                      <div *ngIf="submitted && f.password.errors" class="invalid-feedback">\n                          <div *ngIf="f.password.errors.required">Password is required</div>\n                          <div *ngIf="f.password.errors.minlength">Password must be at least 6 characters</div>\n                      </div>\n                  </div>\n                  <div class="form-group">\n                      <label>Confirm Password</label>\n                      <input type="password" formControlName="confirmPassword" class="form-control" [ngClass]="{ \'is-invalid\': submitted && f.confirmPassword.errors }" />\n                      <div *ngIf="submitted && f.confirmPassword.errors" class="invalid-feedback">\n                          <div *ngIf="f.confirmPassword.errors.required">Confirm Password is required</div>\n                          <div *ngIf="f.confirmPassword.errors.mustMatch">Passwords must match</div>\n                      </div>\n                  </div>\n                  <div class="form-group">\n                      <button class="btn btn-primary">{{RegBtnText}}</button>\n                      <a routerLink="/{{loginURL}}" routerLinkActive="active" class="pull-right">{{loginBtnText}}</a>\n                  </div>\n              </form>',styles:[".regForm{padding:10px}"]}]}],L.ctorParameters=function(){return[{type:i.FormBuilder},{type:u.ActivatedRoute},{type:u.Router},{type:l},{type:undefined,decorators:[{type:o.Inject,args:[c]}]}]},L.propDecorators={loginBtnText:[{type:o.Input}],RegBtnText:[{type:o.Input}],heading:[{type:o.Input}]},L);function L(t,e,n,r,i){this.fb=t,this.route=e,this.router=n,this.authenticationService=r,this.authconfig=i,this.loading=!1,this.submitted=!1,this.error="",this.custClass="",this.frmShow=!0,this.loginURL=this.authconfig.loginURL?this.authconfig.loginURL:"login",this.regSuccessMsg=this.authconfig.regSuccessMsg?this.authconfig.regSuccessMsg:"Successfully Submitted",this.loginBtnText="Login",this.RegBtnText="Register",this.heading="User Register",this.userExist=!1,this.curEmail=""}var N=function J(){},C=(k.prototype.ngAfterViewInit=function(){var t=this.authconfig.FBProvider;window.fbAsyncInit=function(){FB.init({appId:t,autoLogAppEvents:!0,cookie:!0,xfbml:!0,version:"v3.3"})}},k.prototype.ngOnInit=function(){var t,e,n,r;t=document,e="facebook-jssdk",r=t.getElementsByTagName("script")[0],t.getElementById(e)||((n=t.createElement("script")).id=e,n.async=!1,n.src="//connect.facebook.net/en_US/sdk.js",r.parentNode.insertBefore(n,r))},k.prototype.fbLogin=function(){var n=this;this.getFbUserData().then(function(e){n.loading=!0,n.authenticationService.fbRegister(e).pipe(a.first()).subscribe(function(t){n.authenticationService.FBlogin(e).subscribe(function(t){n.router.navigate([n.authconfig.AfterLoginURL])})},function(t){n.error=t,n.loading=!1})})["catch"](function(t){console.log(t)})},k.prototype.getFbUserData=function(){return new Promise(function(r,e){FB.login(function(t){if(t.authResponse){var n=t.authResponse;FB.api("/me",{locale:"en_US",fields:"id,first_name,last_name,email,link,gender,locale,picture"},function(t){var e=new N;e.id=t.id,e.email=t.email,e.photoURL="https://graph.facebook.com/"+t.id+"/picture?type=normal",e.firstName=t.first_name,e.lastName=t.last_name,e.authToken=n.accessToken,e.facebook=t,e.provider="FACEBOOK",r(e)})}else e("User cancelled login or did not fully authorize.")},{scope:"email"})})},k.decorators=[{type:o.Component,args:[{selector:"lib-fblogin",template:'<button class="btn facebook-btn social-btn btn-facebook"  (click)="fbLogin()" type="button"> <span> {{ btnText }}</span> <i class="fa fa-facebook"></i> </button>',styles:[""]}]}],k.ctorParameters=function(){return[{type:undefined,decorators:[{type:o.Inject,args:[c]}]},{type:u.Router},{type:u.ActivatedRoute},{type:l}]},k.propDecorators={btnText:[{type:o.Input}]},k);function k(t,e,n,r){this.authconfig=t,this.router=e,this.route=n,this.authenticationService=r,this.loading=!1,this.submitted=!1,this.error="",this.btnText="SignIn/SignUp with "}var P=(j.prototype.ngOnInit=function(){this.returnUrl=this.route.snapshot.queryParams.returnUrl||this.authconfig.AfterLoginURL,this.initialize().then(function(t){})["catch"](function(t){console.log(t,"error")})},j.prototype.loadScript=function(t,e,n,r,i){if(void 0===r&&(r=!0),void 0===i&&(i=""),!document.getElementById(t)){var o=document.createElement("script");o.async=!0,o.src="https://apis.google.com/js/platform.js",o.onload=n,o.text="Gmail Login",document.head.appendChild(o)}},j.prototype.signInWithGoogle=function(){var n=this;gapi.auth2.getAuthInstance().isSignedIn.get(),gapi.auth2.getAuthInstance().signIn().then(function(t){var e=n.getGoogleProfile();n.authenticationService.register(e.firstName,e.lastName,e.email,e.id,e.provider,e.photoURL).pipe(a.first()).subscribe(function(t){n.authenticationService.login(e.email,e.id).subscribe(function(t){n.router.navigate([n.authconfig.AfterLoginURL])})},function(t){console.log(t),n.error=t,n.loading=!1})})["catch"](function(t){console.log("Cancelled")})},j.prototype.getGoogleProfile=function(){var t=gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile(),e=new N;return e.id=t.getId(),e.email=t.getEmail(),e.photoURL=t.getImageUrl(),e.firstName=t.getGivenName(),e.lastName=t.getFamilyName(),e.authToken="",e.idToken="",e.provider="GOOGLE",e},j.decorators=[{type:o.Component,args:[{selector:"lib-gmaillogin",template:'<button class="btn google-btn social-btn btn-google" (click)="signInWithGoogle()" type="button">  <span> {{ btnText }}</span><i class="fa fa-google-plus"></i></button>\n',styles:[""]}]}],j.ctorParameters=function(){return[{type:l},{type:undefined,decorators:[{type:o.Inject,args:[c]}]},{type:u.Router},{type:u.ActivatedRoute}]},j.propDecorators={btnText:[{type:o.Input}]},j);function j(t,e,n,r){this.authenticationService=t,this.authconfig=e,this.router=n,this.route=r,this.btnText="SignIn/SignUp with ",this.loading=!1,this.submitted=!1,this.error="",this.initialize=function(){var n=this.authconfig.gmailProvider,r=this.authconfig.gmailAPIKey,i=this;return new Promise(function(t,e){i.loadScript(n,"https://apis.google.com/js/platform.js",function(){gapi.load("auth2",function(){i.auth2=gapi.auth2.init({apiKey:r,clientId:n,scope:"https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/plus.me"}),i.auth2.then(function(){t()})["catch"](function(t){e(t)})})})})}}var E=(q.prototype.ngOnInit=function(){},q.prototype.signOut=function(){this.authenticationService.logout(),this.router.navigate(["/"])},q.decorators=[{type:o.Component,args:[{selector:"td-log-out",template:'<a (click)="signOut()" href="javascript:void(0)"> Log Out</a>',styles:[""]}]}],q.ctorParameters=function(){return[{type:l},{type:u.Router},{type:undefined,decorators:[{type:o.Inject,args:[c]}]}]},q);function q(t,e,n){this.authenticationService=t,this.router=e,this.authconfig=n}var T=(A.prototype.ngOnInit=function(){this.IGClientid=this.authconfig.IGClientid,this.IGRedirectURL=""!=this.authconfig.IGRedirectURL?this.authconfig.IGRedirectURL:this.authconfig.loginURL},A.prototype.instaSignIn=function(){return this.authenticateInstagram(this.IGClientid,this.IGRedirectURL),!1},A.prototype.authenticateInstagram=function(t,n){var r=this,e=(window.screen.width-700)/2,i=(window.screen.height-500)/2,o=window.open("instagram_auth.php","","width=700,height=500,left="+e+",top="+i);o.onload=function(){0==window.location.hash.length&&o.open("https://instagram.com/oauth/authorize/?client_id="+t+"&redirect_uri="+n+"&response_type=token","_self");var e=setInterval(function(){try{o.location.hash.length&&(clearInterval(e),r.accessToken=o.location.hash.slice(14),o.close(),r.login_callback())}catch(t){console.log("in err")}},100)}},A.prototype.login_callback=function(){var r=this;this.accessToken&&this.authenticationService.getInstaUserData(this.accessToken).subscribe(function(t){if(t){var e=t.data,n=e.full_name.split(" ");r.authenticationService.register(n[0],n[1]?n[1]:".",e.username,e.id,"INSTAGRAM",e.profile_picture).pipe(a.first()).subscribe(function(t){r.authenticationService.login(e.username,e.id).subscribe(function(t){r.router.navigate([r.authconfig.AfterLoginURL])})},function(t){console.log(t)})}})},A.decorators=[{type:o.Component,args:[{selector:"td-insta-login",template:'<a id="instagram-button" (click)="instaSignIn()" class="btn btn-block btn-social btn-instagram">\n  <i class="fa fa-instagram"></i>  {{btnText}}\n</a>\n\n',styles:[""]}]}],A.ctorParameters=function(){return[{type:u.Router},{type:l},{type:undefined,decorators:[{type:o.Inject,args:[c]}]}]},A.propDecorators={btnText:[{type:o.Input}]},A);function A(t,e,n){this.router=t,this.authenticationService=e,this.authconfig=n,this.accessToken=null,this.IGClientid="",this.IGRedirectURL="",this.btnText="Instagram Login"}var B,F=(S(O,B=I),O.prototype.ngOnInit=function(){B.prototype.ngOnInit.call(this)},O.decorators=[{type:o.Component,args:[{selector:"ion-login",template:'<div id="logreg-forms" *ngIf="showLogin">\n  <form class="form-signin" [formGroup]="loginForm" (ngSubmit)="onSubmit()">\n\n      <ion-grid>\n          <ion-row justify-content-center>\n              <ion-col align-self-center size-md="6" size-lg="5" size-xs="12">\n                  <div text-center>\n                      <h3>  {{heading}} </h3>\n                  </div>\n                  <div padding>\n\n                      <div *ngIf="error" class="text-danger">{{error}}</div>\n\n                      <ion-item>\n                          <ion-label position="floating">Username</ion-label>\n                          <ion-input type="text" formControlName="username" class="form-control"\n                              [ngClass]="{ \'is-invalid\': submitted && f.username.errors }"></ion-input>                            \n                      </ion-item>\n                      <ion-item *ngIf="submitted && f.username.errors" class="error-message">\n                          <div  *ngIf="f.username.errors.required">Username is required</div>\n                      </ion-item>\n                      <ion-item>\n                          <ion-label position="floating" for="password">Password</ion-label>\n                          <ion-input type="password" formControlName="password" class="form-control"\n                              [ngClass]="{ \'is-invalid\': submitted && f.password.errors }"></ion-input>                            \n                      </ion-item>\n                      <ion-item *ngIf="submitted && f.password.errors" class="error-message">\n                          <div class="error-message" *ngIf="f.password.errors.required">Password is required</div>\n                      </ion-item>\n                      <ion-item>\n                          <ion-button type="submit" expand="block" [disabled]="loading" color="success" class="btn btn-success btn-block">Login\n                          </ion-button>\n                      </ion-item>\n                      <ion-item>\n                        <a routerLink="/{{regURL}}" id="newAccount">{{RegBtnText}}</a>\n                      </ion-item>\n                  </div>\n              </ion-col>\n          </ion-row>\n      </ion-grid>\n  </form>\n</div>\n\n\n<div class="well" *ngIf="!showLogin">\n  You are loggedIN with following details:<br />\n\n  Username : {{currentUser.username}}\n  <p> First Name : {{currentUser.firstName}} </p>\n  \x3c!-- <p> <td-log-out></td-log-out></p>--\x3e\n</div>',styles:[""]}]}],O.ctorParameters=function(){return[{type:i.FormBuilder},{type:u.ActivatedRoute},{type:u.Router},{type:l},{type:undefined,decorators:[{type:o.Inject,args:[c]}]}]},O);function O(t,e,n,r,i){var o=B.call(this,t,e,n,r,i)||this;return o.formBuilder=t,o.route=e,o.router=n,o.authenticationService=r,o.authconfig=i,o}var _,V=(S(G,_=R),G.prototype.ngOnInit=function(){_.prototype.ngOnInit.call(this)},G.decorators=[{type:o.Component,args:[{selector:"ion-reg",template:'\x3c!-- main app container --\x3e\n\n<div *ngIf="error" class="alert alert-danger">{{error}}</div>\n<div *ngIf="registerForm.valid && submitted && regSuccessMsg" class="alert alert-{{custClass}}">{{regSuccessMsg}}</div>\n\n<form *ngIf="frmShow" [formGroup]="registerForm" (ngSubmit)="onSubmit()">\n  <ion-grid>\n    <ion-row justify-content-center>\n\n    \n      <ion-col align-self-center size-md="6" size-lg="5" size-xs="12">\n        <div text-center>\n          <h3> {{heading}} </h3>\n        </div>\n        <div padding>\n          <ion-item>\n            <ion-label position="floating">First Name</ion-label>\n            <ion-input type="text" tabindex="-1" formControlName="firstName" class="form-control"\n              [ngClass]="{ \'is-invalid\': submitted && f.firstName.errors }"></ion-input> \n          </ion-item>\n          \n          <div *ngIf="submitted && f.firstName.errors" class="invalid-feedback">\n              <div *ngIf="f.firstName.errors.required">First Name is required</div>\n          </div>\n\n          <ion-item>\n            <ion-label position="floating">Last Name</ion-label>\n            <ion-input type="text" formControlName="lastName" class="form-control"\n              [ngClass]="{ \'is-invalid\': submitted && f.lastName.errors }"></ion-input>            \n          </ion-item>\n          <div *ngIf="submitted && f.lastName.errors" class="invalid-feedback">\n              <div *ngIf="f.lastName.errors.required">Last Name is required</div>\n            </div>\n\n          <ion-item>\n            <ion-label position="floating">Email</ion-label>\n            <ion-input type="text" (blur)="isEmailUnique(emailAdd.value)" id="email" formControlName="email" #emailAdd\n              class="form-control" [ngClass]="{ \'is-invalid\': submitted && f.email.errors }" ></ion-input>           \n          </ion-item>\n\n          <div *ngIf="submitted && f.email.errors" class="invalid-feedback">\n              <div *ngIf="f.email.errors.required">Email is required</div>\n              <div *ngIf="f.email.errors.email">Email must be a valid email address</div>\n            </div>\n            <div *ngIf="userExist" class="invalid-feedback">This Email is already exists.</div>\n\n\n          <ion-item>\n              \n            <ion-label position="floating">Password</ion-label>\n            <ion-input type="password" formControlName="password" class="form-control"\n              [ngClass]="{ \'is-invalid\': submitted && f.password.errors }"></ion-input>            \n          </ion-item>\n          <div *ngIf="submitted && f.password.errors" class="invalid-feedback">\n              <div *ngIf="f.password.errors.required">Password is required</div>\n              <div *ngIf="f.password.errors.minlength">Password must be at least 6 characters</div>\n            </div>\n\n          <ion-item>\n            <ion-label position="floating">Confirm Password</ion-label>\n            <ion-input type="password" formControlName="confirmPassword" class="form-control"\n              [ngClass]="{ \'is-invalid\': submitted && f.confirmPassword.errors }"></ion-input>           \n          </ion-item>\n          <div *ngIf="submitted && f.confirmPassword.errors" class="invalid-feedback">\n              <div *ngIf="f.confirmPassword.errors.required">Confirm Password is required</div>\n              <div *ngIf="f.confirmPassword.errors.mustMatch">Passwords must match</div>\n            </div>\n\n          <ion-item>\n            <ion-button type="sumit"  expand="block" class="btn btn-primary btn-">{{RegBtnText}}</ion-button>\n            <a routerLink="/{{loginURL}}" routerLinkActive="active" class="pull-right">{{loginBtnText}}</a>\n          </ion-item>\n        </div>\n      </ion-col>\n    </ion-row>\n  </ion-grid>\n</form>',styles:[""]}]}],G.ctorParameters=function(){return[{type:i.FormBuilder},{type:u.ActivatedRoute},{type:u.Router},{type:l},{type:undefined,decorators:[{type:o.Inject,args:[c]}]}]},G);function G(t,e,n,r,i){var o=_.call(this,t,e,n,r,i)||this;return o.fb=t,o.route=e,o.router=n,o.authenticationService=r,o.authconfig=i,o}var M=(D.forRoot=function(t){return{ngModule:D,providers:[f,{provide:c,useValue:t}]}},D.decorators=[{type:o.NgModule,args:[{declarations:[g,I,R,C,P,E,T,F,V],imports:[e.CommonModule,i.FormsModule,i.ReactiveFormsModule,n.HttpClientModule,u.RouterModule,r.IonicModule],providers:[{provide:n.HTTP_INTERCEPTORS,useClass:h,multi:!0},{provide:n.HTTP_INTERCEPTORS,useClass:b,multi:!0}],exports:[g,I,R,C,P,E,T,F,V]}]}],D);function D(){}var z=(H.prototype.canActivate=function(t,e){return!!localStorage.getItem("currentUser")||(this.router.navigate(["/login"],{queryParams:{returnUrl:e.url}}),!1)},H.decorators=[{type:o.Injectable,args:[{providedIn:"root"}]}],H.ctorParameters=function(){return[{type:u.Router}]},H.ngInjectableDef=o.defineInjectable({factory:function(){return new H(o.inject(u.Router))},token:H,providedIn:"root"}),H);function H(t){this.router=t}t.AioAuthV01Service=f,t.AioAuthV01Component=g,t.AioAuthV01Module=M,t.AuthConfigService=c,t.AuthGuard=z,t.ɵk=b,t.ɵj=h,t.ɵa=l,t.ɵd=C,t.ɵe=P,t.ɵg=T,t.ɵh=F,t.ɵi=V,t.ɵf=E,t.ɵb=I,t.ɵc=R,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=aio-auth-v01.umd.min.js.map